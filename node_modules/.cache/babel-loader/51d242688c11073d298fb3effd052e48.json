{"ast":null,"code":"var _jsxFileName = \"/home/abhishekraj/Desktop/frontend/pomodoro-timer/src/components/Settings/Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport styles from \"./Settings.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = _ref => {\n  _s();\n\n  let {\n    setIsOpenSettings,\n    setIsTimerActive,\n    customTime,\n    setCustomTime\n  } = _ref;\n  const [time, setTime] = useState(customTime);\n\n  const setTimer = event => {\n    setIsTimerActive(false);\n    setTime(event.target.value);\n  };\n\n  const saveSettings = () => {\n    setCustomTime(time);\n    setIsOpenSettings(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set your own focus time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.InputLabel,\n      children: [\"Time (in minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        placeholder: \"e.g. 25\",\n        value: time,\n        onChange: event => setTimer(event),\n        className: styles.InputArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.SaveButton,\n      onClick: saveSettings,\n      disabled: time <= 0,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"KwqcAEQmLnw0vWaIqxr6vcmpsL8=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/home/abhishekraj/Desktop/frontend/pomodoro-timer/src/components/Settings/Settings.jsx"],"names":["useState","Button","styles","Settings","setIsOpenSettings","setIsTimerActive","customTime","setCustomTime","time","setTime","setTimer","event","target","value","saveSettings","InputLabel","InputArea","SaveButton"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;;;AAEA,MAAMC,QAAQ,GAAG,QAKX;AAAA;;AAAA,MALY;AAChBC,IAAAA,iBADgB;AAEhBC,IAAAA,gBAFgB;AAGhBC,IAAAA,UAHgB;AAIhBC,IAAAA;AAJgB,GAKZ;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,UAAD,CAAhC;;AAEA,QAAMI,QAAQ,GAAIC,KAAD,IAAW;AAC1BN,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBP,IAAAA,aAAa,CAACC,IAAD,CAAb;AACAJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAEF,MAAM,CAACa,UAAzB;AAAA,oDAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,WAAW,EAAC,SAHd;AAIE,QAAA,KAAK,EAAEP,IAJT;AAKE,QAAA,QAAQ,EAAGG,KAAD,IAAWD,QAAQ,CAACC,KAAD,CAL/B;AAME,QAAA,SAAS,EAAET,MAAM,CAACc;AANpB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEd,MAAM,CAACe,UADpB;AAEE,MAAA,OAAO,EAAEH,YAFX;AAGE,MAAA,QAAQ,EAAEN,IAAI,IAAI,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAuBD,CAzCD;;GAAML,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nimport Button from \"../Button/Button\";\n\nimport styles from \"./Settings.module.css\";\n\nconst Settings = ({\n  setIsOpenSettings,\n  setIsTimerActive,\n  customTime,\n  setCustomTime,\n}) => {\n  const [time, setTime] = useState(customTime);\n\n  const setTimer = (event) => {\n    setIsTimerActive(false);\n    setTime(event.target.value);\n  };\n\n  const saveSettings = () => {\n    setCustomTime(time);\n    setIsOpenSettings(false);\n  };\n\n  return (\n    <>\n      <h2>Set your own focus time</h2>\n      <label className={styles.InputLabel}>\n        Time (in minutes):\n        <input\n          type=\"number\"\n          min=\"0\"\n          placeholder=\"e.g. 25\"\n          value={time}\n          onChange={(event) => setTimer(event)}\n          className={styles.InputArea}\n        />\n      </label>\n      <Button\n        className={styles.SaveButton}\n        onClick={saveSettings}\n        disabled={time <= 0}\n      >\n        Save\n      </Button>\n    </>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}