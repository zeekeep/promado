{"ast":null,"code":"var _jsxFileName = \"/home/abhishekraj/Desktop/frontend/pomodoro-timer/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport cx from \"classnames\";\nimport Header from \"./components/Header/Header\";\nimport Timer from \"./components/Timer/Timer\";\nimport Settings from \"./components/Settings/Settings\";\nimport SettingsButton from \"./components/SettingsButton/SettingsButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [round, setRound] = useState(\"pomodoro\");\n  const [isOpenSettings, setIsOpenSettings] = useState(false);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [customTime, setCustomTime] = useState(25);\n  const isPomodoro = round === \"pomodoro\";\n  const roundTime = {\n    pomodoro: customTime || 25,\n    longBreak: 15,\n    shortBreak: 5\n  };\n  useEffect(() => {\n    if (!isTimerActive) {\n      document.title = \"Pomodoro Timer\";\n    }\n  }, [isTimerActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(styles.Container, {\n        [styles.TimerActive]: isTimerActive\n      }),\n      children: [isPomodoro && /*#__PURE__*/_jsxDEV(SettingsButton, {\n        isOpenSettings: isOpenSettings,\n        setIsOpenSettings: setIsOpenSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), isOpenSettings ? /*#__PURE__*/_jsxDEV(Settings, {\n        setIsOpenSettings: setIsOpenSettings,\n        setIsTimerActive: setIsTimerActive,\n        customTime: customTime,\n        setCustomTime: setCustomTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Timer, {\n        round: round,\n        setRound: setRound,\n        currentTime: roundTime[round],\n        isTimerActive: isTimerActive,\n        setIsTimerActive: setIsTimerActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bzzNen8MATTHTJBpNSqqJRN/dz0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abhishekraj/Desktop/frontend/pomodoro-timer/src/App.jsx"],"names":["useState","useEffect","styles","cx","Header","Timer","Settings","SettingsButton","App","round","setRound","isOpenSettings","setIsOpenSettings","isTimerActive","setIsTimerActive","customTime","setCustomTime","isPomodoro","roundTime","pomodoro","longBreak","shortBreak","document","title","Container","TimerActive"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,UAAD,CAAlC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMiB,UAAU,GAAGR,KAAK,KAAK,UAA7B;AAEA,QAAMS,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAEJ,UAAU,IAAI,EADR;AAEhBK,IAAAA,SAAS,EAAE,EAFK;AAGhBC,IAAAA,UAAU,EAAE;AAHI,GAAlB;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,aAAL,EAAoB;AAClBS,MAAAA,QAAQ,CAACC,KAAT,GAAiB,gBAAjB;AACD;AACF,GAJQ,EAIN,CAACV,aAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACM,GAAvB;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAEL,EAAE,CAACD,MAAM,CAACsB,SAAR,EAAmB;AAC9B,SAACtB,MAAM,CAACuB,WAAR,GAAsBZ;AADQ,OAAnB,CADf;AAAA,iBAKGI,UAAU,iBACT,QAAC,cAAD;AACE,QAAA,cAAc,EAAEN,cADlB;AAEE,QAAA,iBAAiB,EAAEC;AAFrB;AAAA;AAAA;AAAA;AAAA,cANJ,EAWGD,cAAc,gBACb,QAAC,QAAD;AACE,QAAA,iBAAiB,EAAEC,iBADrB;AAEE,QAAA,gBAAgB,EAAEE,gBAFpB;AAGE,QAAA,UAAU,EAAEC,UAHd;AAIE,QAAA,aAAa,EAAEC;AAJjB;AAAA;AAAA;AAAA;AAAA,cADa,gBAQb,QAAC,KAAD;AACE,QAAA,KAAK,EAAEP,KADT;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,WAAW,EAAEQ,SAAS,CAACT,KAAD,CAHxB;AAIE,QAAA,aAAa,EAAEI,aAJjB;AAKE,QAAA,gBAAgB,EAAEC;AALpB;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA8BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAtDD;;GAAMN,G;;KAAAA,G;AAwDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport styles from \"./App.module.css\";\nimport cx from \"classnames\";\n\nimport Header from \"./components/Header/Header\";\nimport Timer from \"./components/Timer/Timer\";\nimport Settings from \"./components/Settings/Settings\";\nimport SettingsButton from \"./components/SettingsButton/SettingsButton\";\n\nconst App = () => {\n  const [round, setRound] = useState(\"pomodoro\");\n  const [isOpenSettings, setIsOpenSettings] = useState(false);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [customTime, setCustomTime] = useState(25);\n\n  const isPomodoro = round === \"pomodoro\";\n\n  const roundTime = {\n    pomodoro: customTime || 25,\n    longBreak: 15,\n    shortBreak: 5,\n  };\n\n  useEffect(() => {\n    if (!isTimerActive) {\n      document.title = \"Pomodoro Timer\";\n    }\n  }, [isTimerActive]);\n\n  return (\n    <div className={styles.App}>\n      <Header />\n      <div\n        className={cx(styles.Container, {\n          [styles.TimerActive]: isTimerActive,\n        })}\n      >\n        {isPomodoro && (\n          <SettingsButton\n            isOpenSettings={isOpenSettings}\n            setIsOpenSettings={setIsOpenSettings}\n          />\n        )}\n        {isOpenSettings ? (\n          <Settings\n            setIsOpenSettings={setIsOpenSettings}\n            setIsTimerActive={setIsTimerActive}\n            customTime={customTime}\n            setCustomTime={setCustomTime}\n          />\n        ) : (\n          <Timer\n            round={round}\n            setRound={setRound}\n            currentTime={roundTime[round]}\n            isTimerActive={isTimerActive}\n            setIsTimerActive={setIsTimerActive}\n          />\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}